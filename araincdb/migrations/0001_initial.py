# Generated by Django 3.0.7 on 2021-02-22 15:09

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Account',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('account_name', models.CharField(max_length=200, verbose_name='Account Name')),
                ('account_code', models.CharField(max_length=200, verbose_name='Account Code')),
            ],
            options={
                'verbose_name': 'Assigned Account',
                'verbose_name_plural': 'Assigned Accounts',
            },
        ),
        migrations.CreateModel(
            name='Client',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('client_name', models.CharField(max_length=200, verbose_name='Client Name')),
                ('client_code', models.CharField(max_length=200, unique=True, verbose_name='Client Code')),
            ],
            options={
                'verbose_name': 'Client',
                'verbose_name_plural': 'Clients',
            },
        ),
        migrations.CreateModel(
            name='ConnectionStatus',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('connection_status', models.CharField(max_length=200, verbose_name='Connection Status')),
            ],
            options={
                'verbose_name': 'Connection Status',
                'verbose_name_plural': 'Connection Statuses',
            },
        ),
        migrations.CreateModel(
            name='ConnectionType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('connection_type', models.CharField(max_length=200, verbose_name='Connection Type')),
            ],
            options={
                'verbose_name': 'Connection Type',
                'verbose_name_plural': 'Connection Types',
            },
        ),
        migrations.CreateModel(
            name='ErrorType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('error_type', models.CharField(max_length=200, verbose_name='Error Type')),
            ],
            options={
                'verbose_name': 'Error Type',
                'verbose_name_plural': 'Error Types',
            },
        ),
        migrations.CreateModel(
            name='GrowthStatus',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('growth_status', models.CharField(max_length=200, verbose_name='Growth Status')),
            ],
            options={
                'verbose_name': 'Growth Status',
                'verbose_name_plural': 'Growth Statuses',
            },
        ),
        migrations.CreateModel(
            name='ListingStatus',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('listing_status', models.CharField(max_length=200, verbose_name='Listing Status')),
            ],
            options={
                'verbose_name': 'Listing Status',
                'verbose_name_plural': 'Listing Statuses',
            },
        ),
        migrations.CreateModel(
            name='Location',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('location', models.CharField(max_length=200, verbose_name='Location')),
            ],
            options={
                'verbose_name': 'Location',
                'verbose_name_plural': 'Locations',
            },
        ),
        migrations.CreateModel(
            name='MessageSendingStatus',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('mss', models.CharField(max_length=200, verbose_name='Message Status')),
            ],
            options={
                'verbose_name': 'Message Sending Status',
                'verbose_name_plural': 'Message Sending Statuses',
            },
        ),
        migrations.CreateModel(
            name='OMS',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('oms', models.CharField(max_length=200, verbose_name='Message Status')),
            ],
            options={
                'verbose_name': 'OMS',
                'verbose_name_plural': 'OMSES',
            },
        ),
        migrations.CreateModel(
            name='QcFeedback',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('qc_feedback', models.CharField(max_length=200, verbose_name='QC Feedback')),
            ],
            options={
                'verbose_name': 'QC Feedback',
                'verbose_name_plural': 'QC Feedbacks',
            },
        ),
        migrations.CreateModel(
            name='QualityStatus',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quality_status', models.CharField(max_length=200, verbose_name='Quality Status')),
            ],
            options={
                'verbose_name': 'Quality Status',
                'verbose_name_plural': 'Quality Statuses',
            },
        ),
        migrations.CreateModel(
            name='Tempgrowth',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('profile_username', models.CharField(max_length=200, verbose_name='Username')),
                ('scraping_status', models.CharField(max_length=200, verbose_name='Scraping Status')),
                ('external_url', models.CharField(blank=True, max_length=1000, null=True, verbose_name='External URL')),
                ('location', models.CharField(blank=True, max_length=200, null=True, verbose_name='Location')),
                ('caption', models.CharField(blank=True, max_length=1000, null=True, verbose_name='Caption')),
                ('publication_date', models.DateField(blank=True, null=True, verbose_name='Publication Date')),
                ('hashtag', models.CharField(blank=True, max_length=200, null=True, verbose_name='Hashtag')),
            ],
            options={
                'verbose_name': 'Temp Growth',
                'verbose_name_plural': 'Temp Growths',
            },
        ),
        migrations.CreateModel(
            name='Templisting',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('username', models.CharField(max_length=200, unique=True, verbose_name='Username')),
                ('photo_url_query', models.CharField(max_length=1000, verbose_name='Photo URL/ Query')),
                ('connection_type', models.CharField(blank=True, max_length=200, null=True, verbose_name='Connection Type')),
            ],
            options={
                'verbose_name': 'Temp Listing',
                'verbose_name_plural': 'Temp Listings',
            },
        ),
        migrations.CreateModel(
            name='WarmScript',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('url', models.CharField(max_length=200, verbose_name='URL')),
                ('message', models.CharField(max_length=1000, verbose_name='Message')),
            ],
            options={
                'verbose_name': 'Warm Script',
                'verbose_name_plural': 'Warm Scripts',
            },
        ),
        migrations.CreateModel(
            name='Listing',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('profile_username', models.CharField(max_length=200, unique=True, verbose_name='Username')),
                ('scraping_status', models.CharField(blank=True, max_length=200, null=True, verbose_name='Scraping Status')),
                ('photo_url_query', models.CharField(blank=True, max_length=1000, null=True, verbose_name='Photo URL/ Query')),
                ('external_url', models.CharField(blank=True, max_length=1000, null=True, verbose_name='External URL')),
                ('profile_description', models.CharField(blank=True, max_length=1000, null=True, verbose_name='Profile Description')),
                ('full_name', models.CharField(blank=True, max_length=200, null=True, verbose_name='Full Name')),
                ('input_date', models.DateTimeField(blank=True, default=django.utils.timezone.now, null=True, verbose_name='Input Date')),
                ('location', models.CharField(blank=True, max_length=200, null=True, verbose_name='Location')),
                ('cs', models.CharField(max_length=1000, null=True, verbose_name='CS')),
                ('cs_reviewed', models.CharField(max_length=1000, null=True, verbose_name='CS Reviewed')),
                ('operation_date', models.DateField(blank=True, null=True, verbose_name='Operation Date')),
                ('engagement_content', models.CharField(blank=True, max_length=200, null=True, verbose_name='Engagement Content')),
                ('feedback_listing', models.CharField(blank=True, max_length=200, null=True, verbose_name='Feedback Listing')),
                ('remarks', models.CharField(blank=True, max_length=1000, null=True, verbose_name='Remarks')),
                ('screening_review_status', models.CharField(blank=True, max_length=200, null=True, verbose_name='Screening Review Status')),
                ('cs_create_status', models.CharField(blank=True, max_length=200, null=True, verbose_name='CS Create Status')),
                ('cs_crosscheck_status', models.CharField(blank=True, max_length=200, null=True, verbose_name='CS Crosscheck Status')),
                ('cs_review_status', models.CharField(blank=True, max_length=200, null=True, verbose_name='CS Review Status')),
                ('ms_status', models.CharField(blank=True, max_length=200, null=True, verbose_name='MS Status')),
                ('oms_status', models.CharField(blank=True, max_length=200, null=True, verbose_name='OMS Status')),
                ('screened_date', models.DateTimeField(blank=True, null=True, verbose_name='Screened Date')),
                ('cs_date', models.DateTimeField(blank=True, null=True, verbose_name='CS Date')),
                ('cs_review_date', models.DateTimeField(blank=True, null=True, verbose_name='CS Review Date')),
                ('cs_crosscheck_date', models.DateTimeField(blank=True, null=True, verbose_name='CS Crosscheck Date')),
                ('ms_date', models.DateTimeField(blank=True, null=True, verbose_name='Message Sending Date')),
                ('oms_date', models.DateTimeField(blank=True, null=True, verbose_name='OMS Date')),
                ('added_date', models.DateTimeField(blank=True, null=True, verbose_name='Added Date')),
                ('updated_date', models.DateTimeField(blank=True, null=True, verbose_name='Update Date')),
                ('added_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='+', to=settings.AUTH_USER_MODEL, verbose_name='Added By')),
                ('assigned_account', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='araincdb.Account', verbose_name='Assigned Account')),
                ('client_name', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='araincdb.Client', verbose_name='Client Name')),
                ('connection_status', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='araincdb.ConnectionStatus', verbose_name='Connection Status')),
                ('connection_type', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='araincdb.ConnectionType', verbose_name='Connection Type')),
                ('cs_crosscheck_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='+', to=settings.AUTH_USER_MODEL, verbose_name='CS Crosscheck By')),
                ('cs_reviewer', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='+', to=settings.AUTH_USER_MODEL, verbose_name='CS Reviewer')),
                ('cs_va', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='+', to=settings.AUTH_USER_MODEL, verbose_name='CS VA')),
                ('ms_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='+', to=settings.AUTH_USER_MODEL, verbose_name='Message Sending VA')),
                ('mss', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='araincdb.MessageSendingStatus', verbose_name='Message Sending Status')),
                ('oms', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='araincdb.OMS', verbose_name='OMS')),
                ('oms_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='+', to=settings.AUTH_USER_MODEL, verbose_name='OMS VA')),
                ('quality_status', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='araincdb.QualityStatus', verbose_name='Quality Status')),
                ('screened_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='+', to=settings.AUTH_USER_MODEL, verbose_name='Screened By')),
                ('updated_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='+', to=settings.AUTH_USER_MODEL, verbose_name='Updated By')),
                ('warm_script', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='+', to='araincdb.WarmScript', verbose_name='Warm Script')),
            ],
            options={
                'verbose_name': 'Listing',
                'verbose_name_plural': 'Listings',
            },
        ),
        migrations.CreateModel(
            name='Growth',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('profile_username', models.CharField(max_length=200, unique=True, verbose_name='Username')),
                ('scraping_status', models.CharField(max_length=200, verbose_name='Scraping Status')),
                ('external_url', models.CharField(blank=True, max_length=1000, null=True, verbose_name='External URL')),
                ('profile_description', models.CharField(blank=True, max_length=1000, null=True, verbose_name='Profile Description')),
                ('full_name', models.CharField(blank=True, max_length=200, null=True, verbose_name='Full Name')),
                ('caption', models.CharField(blank=True, max_length=1000, null=True, verbose_name='Caption')),
                ('post_count', models.IntegerField(blank=True, null=True, verbose_name='Post Count')),
                ('followers', models.IntegerField(blank=True, null=True, verbose_name='Followers')),
                ('followings', models.IntegerField(blank=True, null=True, verbose_name='Followings')),
                ('publication_date', models.DateField(blank=True, null=True, verbose_name='Publication Date')),
                ('hashtag', models.CharField(blank=True, max_length=200, null=True, verbose_name='Hashtag')),
                ('input_date', models.DateTimeField(blank=True, default=django.utils.timezone.now, null=True, verbose_name='Input Date')),
                ('location', models.CharField(blank=True, max_length=200, null=True, verbose_name='Location')),
                ('growth_review_status', models.CharField(blank=True, max_length=200, null=True, verbose_name='Growth Review Status')),
                ('screening_review_status', models.CharField(blank=True, max_length=200, null=True, verbose_name='Screening Review Status')),
                ('unfollowing_status', models.CharField(blank=True, max_length=200, null=True, verbose_name='Unfollowing Status')),
                ('remarks', models.CharField(blank=True, max_length=1000, null=True, verbose_name='Remarks')),
                ('screened_date', models.DateTimeField(blank=True, null=True, verbose_name='Screened Date')),
                ('growthed_date', models.DateTimeField(blank=True, null=True, verbose_name='Growth Date')),
                ('unfollowing_date', models.DateTimeField(blank=True, null=True, verbose_name='Unfollowing Date')),
                ('updated_date', models.DateTimeField(blank=True, null=True, verbose_name='Growth Date')),
                ('assigned_account', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='+', to='araincdb.Account', verbose_name='Assigned Account')),
                ('client_name', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='araincdb.Client', verbose_name='Client Name')),
                ('connection_status', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='araincdb.ConnectionStatus', verbose_name='Connection Status')),
                ('growth_status', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='araincdb.GrowthStatus', verbose_name='Growth Status')),
                ('growthed_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='+', to=settings.AUTH_USER_MODEL, verbose_name='Growth VA')),
                ('quality_status', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='araincdb.QualityStatus', verbose_name='Quality Status')),
                ('screened_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='+', to=settings.AUTH_USER_MODEL, verbose_name='Screening VA')),
                ('unfollowing_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='+', to=settings.AUTH_USER_MODEL, verbose_name='Unfolloiwng VA')),
                ('updated_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='+', to=settings.AUTH_USER_MODEL, verbose_name='Updated By')),
            ],
            options={
                'verbose_name': 'Growth',
                'verbose_name_plural': 'Growths',
            },
        ),
        migrations.CreateModel(
            name='Employee',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('department', models.CharField(max_length=200)),
                ('employee_id', models.CharField(max_length=100)),
                ('assigned_account', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='araincdb.Account', verbose_name='Assigned Account')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Employee',
                'verbose_name_plural': 'Employees',
            },
        ),
        migrations.AddField(
            model_name='account',
            name='client_name',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='araincdb.Client', verbose_name='Client Name'),
        ),
    ]
